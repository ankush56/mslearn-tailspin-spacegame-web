trigger:
- '*'

pool:
  vmImage: 'ubuntu-20.04'
  demands:
  - npm

variables:
  buildConfiguration: 'Release'
  env1: 'sit'
  sec: 'fly'

steps:
- task: UseDotNet@2
  displayName: 'Use .NET SDK 5.x'
  inputs:
    packageType: sdk
    version: '5.x'

- task: Npm@1
  displayName: 'Run npm install'
  inputs:
    verbose: false

- script: './node_modules/.bin/node-sass Tailspin.SpaceGame.Web/wwwroot --output Tailspin.SpaceGame.Web/wwwroot'
  displayName: 'Compile Sass assets'

- task: gulp@1
  displayName: 'Run gulp tasks'

- script: 'echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)" > buildinfo.txt'
  displayName: 'Write build info'
  workingDirectory: Tailspin.SpaceGame.Web/wwwroot

- script: 'mkdir super'
  displayName: 'Create Superman Folder'
  workingDirectory: Tailspin.SpaceGame.Web

- script: 'echo "Superman can fly $(Build.BuildNumber)" > superman.txt'
  displayName: 'Superman script'
  workingDirectory: Tailspin.SpaceGame.Web/super

- script: 'echo "Current build number is $(Build.BuildNumber)" > currentBuild.txt'
  displayName: 'Store build info to script'
  workingDirectory: Tailspin.SpaceGame.Web/super

- script: 'echo "current env is $(env1)" && echo "current env is $(env1)" > currentenv.txt'
  displayName: 'Display plus output variable & store in file'
  workingDirectory: Tailspin.SpaceGame.Web/super

- bash: # script path or inline
  workingDirectory: Tailspin.SpaceGame.Web
  displayName: 'Run Script from code'
  #Map secret enc variables etc
  env:
    sec: $(sec)
  
- task: DotNetCoreCLI@2
  displayName: 'Restore project dependencies'
  inputs:
    command: 'restore'
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: 'Build the project - Release'
  inputs:
    command: 'build'
    arguments: '--no-restore --configuration Release'
    projects: '**/*.csproj'