trigger:
- '*'

pool:
  vmImage: 'ubuntu-20.04'
  demands:
  - npm

variables:
  buildConfiguration: 'Release'
  env1: 'sit'
  sec: 'fly'
  currWorkingDir: 'Tailspin.SpaceGame.Web/wwwroot'

steps:
- task: UseDotNet@2
  displayName: 'Use .NET SDK 5.x'
  inputs:
    packageType: sdk
    version: '5.x'

- task: Npm@1
  displayName: 'Run npm install'
  inputs:
    verbose: false

- script: './node_modules/.bin/node-sass Tailspin.SpaceGame.Web/wwwroot --output Tailspin.SpaceGame.Web/wwwroot'
  displayName: 'Compile Sass assets'

- task: gulp@1
  displayName: 'Run gulp tasks'

- script: 'echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)" > buildinfo.txt'
  displayName: 'Write build info'
  workingDirectory: $(currWorkingDir)

- script: 'mkdir super'
  displayName: 'Create Superman Folder'
  workingDirectory: $(currWorkingDir)

- script: 'echo "Superman can fly $(Build.BuildNumber)" > superman.txt'
  displayName: 'Superman script'
  workingDirectory: '$(currWorkingDir)/super'

- script: 'echo "Current build number is $(Build.BuildNumber)" > currentBuild.txt'
  displayName: 'Store build info to script'
  workingDirectory: '$(currWorkingDir)/super'

- script: 'echo "current env is $(env1)" && echo "current env is $(env1)" > currentenv.txt'
  displayName: 'Display plus output variable & store in file'
  workingDirectory: '$(currWorkingDir)/super'

# Bash
- task: Bash@3
  inputs:
    targetType: 'filePath' # Optional. Options: filePath, inline
    filePath: 'Tailspin.SpaceGame.Web/test.sh'
    #arguments: # Optional
    #script: '# echo Hello world' # Required when targetType == inline
    #workingDirectory: # Optional


# Python script
# Run a Python file or inline script
- task: PythonScript@0
  inputs:
    scriptSource: 'filePath' # Options: filePath, inline
    scriptPath: 'Tailspin.SpaceGame.Web/hello.py'
    #script: # Required when scriptSource == inline
    #arguments: # Optional
    #pythonInterpreter: # Optional
    workingDirectory: Tailspin.SpaceGame.Web
    displayName: 'Run Python script'
  
- task: DotNetCoreCLI@2
  displayName: 'Restore project dependencies'
  inputs:
    command: 'restore'
    projects: '**/*.csproj'

- template: templates/build.yml
  parameters:
    buildConfiguration: 'Debug'

- template: templates/build.yml
  parameters:
    buildConfiguration: 'Release'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'
  condition: succeeded()    

- template: templates/shelltasksTemplate.yml
  parameters:
    currWorkingDir : 'Tailspin.SpaceGame.Web/wwwroot'
    env: 'pat'